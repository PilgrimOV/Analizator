#!/bin/bash
# –ü–æ–∏—Å–∫ —É—Ç–∏–ª–∏—Ç –∏–∑ Homebrew/MacPorts
export PATH="/usr/local/bin:/opt/homebrew/bin:/opt/local/bin:$PATH"
shopt -s nullglob

# –ï—Å–ª–∏ –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ –ø–µ—Ä–µ–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ ‚Äî –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–µ—ë (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
if [ -n "$1" ]; then
  cd "$1" || exit 1
fi

# –£–¥–∞–ª—è–µ–º –ª–æ–≥ –æ—à–∏–±–æ–∫, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
rm -f error.log

process_file() {
    file="$1"
            echo "üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: $file"
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —á–∞—Å—Ç–æ—Ç—É –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
    original_rate=$(ffprobe -v error -select_streams a -show_entries stream=sample_rate \
                     -of default=noprint_wrappers=1:nokey=1 "$file")
    [ -z "$original_rate" ] && original_rate=44100
    
    # –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–æ–¥–Ω–æ–ø—Ä–æ—Ö–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
    analysis=$(ffmpeg -hide_banner -i "$file" -af loudnorm=print_format=summary -f null - 2>&1)
    input_lufs=$(echo "$analysis" | grep "Input Integrated" | awk '{print $3}')
    input_tp=$(echo "$analysis" | grep "Input True Peak" | awk '{print $4}' | sed 's/^\+//')
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∏—Ç—Ä–µ–π—Ç–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è MP3.
    # –î–ª—è —Ñ–∞–π–ª–æ–≤ M4A –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∏—Ç—Ä–µ–π—Ç 320k.
    if [[ "$file" == *.m4a ]]; then
        bitrate="320k"
    else
        bitrate=$(ffprobe -v error -select_streams a -show_entries stream=bit_rate \
                 -of default=noprint_wrappers=1:nokey=1 "$file")
        [ -z "$bitrate" ] && bitrate="320k"
    fi
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º MP3, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ—Ä–º–∞–º
    if [[ "$file" == *.mp3 ]] && (( $(echo "$input_lufs >= -15.5" | bc -l) )) && \
       (( $(echo "$input_lufs <= -13.5" | bc -l) )) && (( $(echo "$input_tp <= -0.2" | bc -l) )); then
        echo "‚úÖ MP3 —É–∂–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ—Ä–º–∞–º. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º: $file"
        return
    fi
    
    # –ï—Å–ª–∏ M4A —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ—Ä–º–∞–º, –∫–æ–¥–∏—Ä—É–µ–º –≤ MP3 —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏—Å—Ö–æ–¥–Ω—ã—Ö LUFS, TP, LRA
    if [[ "$file" == *.m4a ]] && (( $(echo "$input_lufs >= -15.5" | bc -l) )) && \
       (( $(echo "$input_lufs <= -13.5" | bc -l) )) && (( $(echo "$input_tp <= -0.2" | bc -l) )); then
        echo "‚úÖ M4A —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ—Ä–º–∞–º, –∫–æ–¥–∏—Ä—É–µ–º –≤ MP3 320 CBR –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π."
        filter="volume=0dB"
    else
        # –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
        # –í—ã—á–∏—Å–ª—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ü–∏—é (—Ü–µ–ª–µ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å ‚Äì14 LUFS)
        adjustment=$(echo "scale=2; -14 - ($input_lufs)" | bc)
        predicted_tp=$(echo "scale=2; $input_tp + $adjustment" | bc)

        # –ï—Å–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π TP > -0.2 dBTP, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤—É—Ö–ø—Ä–æ—Ö–æ–¥–Ω–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ loudnorm
        if (( $(echo "$predicted_tp > -0.2" | bc -l) )); then
            echo "‚ö†Ô∏è –í—ã—Å–æ–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π TP ($predicted_tp dBTP), –∑–∞–ø—É—Å–∫–∞–µ–º –¥–≤—É—Ö–ø—Ä–æ—Ö–æ–¥–Ω–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ."
            
            json=$(ffmpeg -hide_banner -i "$file" -af "loudnorm=i=-15.5:lra=12:tp=-0.7:print_format=json" -f null - 2>&1)
            measured_I=$(echo "$json" | awk -F'"' '/"input_i"/ {print $4}')
            measured_TP=$(echo "$json" | awk -F'"' '/"input_tp"/ {print $4}')
            measured_LRA=$(echo "$json" | awk -F'"' '/"input_lra"/ {print $4}')
            measured_thresh=$(echo "$json" | awk -F'"' '/"input_thresh"/ {print $4}')
            offset=$(echo "$json" | awk -F'"' '/"target_offset"/ {print $4}')
            
            filter="loudnorm=i=-15.5:lra=12:tp=-0.7:measured_I=${measured_I}:measured_TP=${measured_TP}:measured_LRA=${measured_LRA}:measured_thresh=${measured_thresh}:offset=${offset}:linear=true:print_format=summary"
        else
            filter="volume=${adjustment}dB"
            echo "‚úÖ TP –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã ($predicted_tp dBTP), –∏—Å–ø–æ–ª—å–∑—É–µ–º volume (+${adjustment} dB)."
        fi
    fi

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞, –¥–æ–±–∞–≤–ª—è—è —Å—É—Ñ—Ñ–∏–∫—Å _New.
    output_file="${file%.*}_New.mp3"
    if [ -e "$output_file" ]; then
        output_file="${file%.*}_New1.mp3"
    fi

    # –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ MP3 320 CBR
    ffmpeg -y -hide_banner -i "$file" \
    -af "$filter" \
    -c:a libmp3lame -b:a "$bitrate" \
    -ar "$original_rate" \
    -write_xing 0 -id3v2_version 3 \
    -map_metadata 0 \
    "$output_file"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if [ ! -f "$output_file" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª: $output_file" >&2
        echo "$file" >> error.log
    else
        echo "üéµ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª: $output_file"
    fi
}

export -f process_file

# –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
find . -type f \( -iname "*.mp3" -o -iname "*.m4a" \) -print0 | \
    parallel -0 -j16 --bar --eta process_file

# –í—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã–µ –∏–º–µ—é—Ç—Å—è
if [ -s error.log ]; then
    echo -e "\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏. –§–∞–π–ª—ã, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–ø–∏–∏:"
    cat error.log
else
    echo -e "\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
fi
